print(f'Задача - "Найдет везде"')
from pprint import pprint


# Напишите класс WordsFinder, объекты которого создаются следующим образом:
# WordsFinder('file1.txt, file2.txt', 'file3.txt', ...).
# Объект этого класса должен принимать при создании неограниченного количество названий файлов
# и записывать их в атрибут file_names в виде списка или кортежа.
# Также объект класса WordsFinder должен обладать следующими методами:
# get_all_words - подготовительный метод, который возвращает словарь следующего вида:
# {'file1.txt': ['word1', 'word2'], 'file2.txt': ['word3', 'word4'], 'file3.txt': ['word5', 'word6', 'word7']}
# Где: 'file1.txt', 'file2.txt', ''file3.txt'' - названия файлов.
# #Алгоритм получения словаря такого вида в методе get_all_words:
# Создайте пустой словарь all_words.
# Переберите названия файлов и открывайте каждый из них, используя оператор with.
# Для каждого файла считывайте единые строки, переводя их в нижний регистр (метод lower()).
# Избавьтесь от пунктуации [',', '.', '=', '!', '?', ';', ':', ' - '] в строке.
# (тире обособлено пробелами, это не дефис в слове).
# Разбейте эту строку на элементы списка методом split(). (разбивается по умолчанию по пробелу)
# В словарь all_words запишите полученные данные, ключ - название файла, значение - список из слов этого файла.
class WordsFinder:
    def __init__(self, *file_names):
        self.file_names = file_names

    def get_all_words(self):
        # создаем пустой словарь all_words.
        all_words = {}
        # перебираем названия файлов и каждый открываем оператором with.
        for file_name in self.file_names:
            with open(file_name, 'r', encoding='utf-8') as file:
                line = file.read().lower()
# убираем пунктуацию в строке [',', '.', '=', '!', '?', ';', ':', ' - ']
                for punctuation in [',', '.', '=', '!', '?', ';', ':', ' - ']:
                    line = line.replace(punctuation, '')
# Метод replace() возвращает копию строки, в которой все вхождения подстроки заменяются другой подстрокой.
# Метод может принимать 3 параметра:
# old — старая подстрока, которую нужно заменить.
# new — новая подстрока, которая заменит старую подстроку.
# count (необязательно) — сколько раз вы хотите заменить старую подстроку новой.
# Возвращаемое значение — копия строки, в которой старая подстрока заменяется новой подстрокой.
# Исходная строка не изменяется. Если старая подстрока не найдена, возвращается копия исходной строки.
# Разбиваем созданную строку на элементы списка методом split() - по умолчанию разбивается по пробелу
# метод extend() добавляет новые элементы в конец списка, но, в отличие от append(), принимает в качестве параметров итерируемые объекты:
# списки, кортежи и строки.
# При этом объединяемые списки могут содержать элементы любых типов:
# можно объединить строки с числами или числа с кортежами.
                words = line.split()
                all_words[file_name] = words

        return all_words

        # полученные данные вносим в словарь all_words, где
        # ключ - название файла, значение - список из слов этого файла.

# используем метод find(self, word) - где word - искомое слово.
# Возвращает словарь, где ключ - название файла, значение - позиция первого такого слова в списке слов этого файла.
    def find(self, word):
        dict_1 = {}
        for name, words in self.get_all_words().items():
            if word.lower() in words:
                dict_1[name] = words.index(word.lower()) + 1
        return dict_1

    # метод count(self, word) - где word - искомое слово.
    # Возвращает словарь, где ключ - название файла, значение - количество слова word в списке слов этого файла.
    def count(self, word):
        dict_2 = {}

        for name, words in self.get_all_words().items():
            dict_2[name] = words.count(word.lower())
        return dict_2


finder2 = WordsFinder('Test_Fail.txt')
print(finder2.get_all_words())  # Все слова
print(finder2.find('TEXT'))  # 3 слово по счёту
print(finder2.count('teXT'))  # 4 слова teXT в тексте всего
print()

finder3 = WordsFinder('Rudyard Kipling - If.txt')
print(finder3.get_all_words())  # Все слова в тексте
print(finder3.count('you'))  # всего слов you
print()
finder1 = WordsFinder('Mother Goose - Monday’s Child (1).txt')
print(finder1.get_all_words())  # Все слова в тексте
print(finder1.find('Hard'))  # какое слово по счету
